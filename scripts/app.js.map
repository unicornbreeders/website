{"version":3,"file":"public/scripts/app.js","sources":["app/config/app.coffee","app/config/environment.coffee","app/config/router.coffee","app/helpers/test.coffee","app/initialize.coffee","app/initializers/environment.coffee","app/routes/index.coffee","app/templates/application.hbs","app/templates/index.hbs","config/environments/development.coffee"],"names":[],"mappings":"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","sourcesContent":["env = require 'config/environment'\n\nif env.get('isDevelopment')\n  options =\n    LOG_TRANSITIONS:                true\n    LOG_TRANSITIONS_INTERNAL:       false\n    LOG_STACKTRACE_ON_DEPRECATION:  true\n    LOG_BINDINGS:                   true\n    LOG_VIEW_LOOKUPS:               true\n    LOG_ACTIVE_GENERATION:          true\n\n  Ember.RSVP.configure 'onerror', (error) ->\n    if Ember.typeOf(error) is 'object'\n      message = error?.message or 'No error message'\n      Ember.Logger.error(\"RSVP Error: #{message}\")\n      Ember.Logger.error(error?.stack)\n      Ember.Logger.error(error?.object)\n    else\n      Ember.Logger.error 'RSVP Error', error\n\n  # Log view render times to the console\n  Ember.STRUCTURED_PROFILE = true\n\n  Ember.Logger.debug(\n    \"Running in the %c#{env.get('name')}%c environment\", 'color: red;', ''\n  )\nelse\n  options = {}\n\noptions['rootElement'] = '#ember-app'\n\nmodule.exports = Ember.Application.create(options)\n","# Require all of the config/environments files. /config.coffee controls which\n# environment files will be loaded.\nwindow.require.list().filter (module) ->\n  require(module) if new RegExp(\"^config/environments/\").test(module)\n\nEnvironment = Ember.Object.extend\n  isTest: Ember.computed.equal('name', 'test')\n  isDevelopment: Ember.computed.equal('name', 'development')\n  isProduction: Ember.computed.equal('name', 'production')\n\nmodule.exports = Environment.create(window.TAPAS_ENV)\n","module.exports = App.Router.map ->\n  # put your routes here\n","Ember.Handlebars.helper 'test', (value, options) ->\n","# ===== Config =====\nwindow.App = require 'config/app'\nrequire 'config/router'\n\n# Load all modules in order automagically. Ember likes things to work this\n# way so everything is in the App.* namespace.\nfolderOrder = [\n  'initializers', 'utils', 'mixins', 'adapters', 'serializers', 'routes',\n  'models', 'views', 'controllers', 'helpers', 'templates', 'components'\n]\n\nfolderOrder.forEach (folder) ->\n  # Go through the prefixes in order and require them\n  window.require.list().filter((module) ->\n    new RegExp(\"^#{folder}/\").test(module)\n  ).forEach((module) -> require(module))\n","env = require 'config/environment'\n\nmodule.exports = Ember.Application.initializer\n  name: 'environment'\n\n  initialize: (container, application) ->\n    application.register(\n      'environment:main', env, instantiate: false, singleton: true\n    )\n    application.inject('controller', 'env', 'environment:main')\n","module.exports = App.IndexRoute = Ember.Route.extend\n  model: ->\n    []\n","module.exports = Ember.TEMPLATES['application'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['index'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  \n\n\n  data.buffer.push(\"<header>\\n  <div class=\\\"logo\\\">\\n    <img src=\\\"/images/logo.svg\\\" alt=\\\"Unicorn Breeders\\\" class=\\\"logo\\\">\\n  </div>\\n  <h1>Digital Builders</h1>\\n</header>\\n<footer>\\n  <div>- <a href=\\\"mailto:fer@unicornbreeders.com\\\">contact</a> -</div>\\n</footer>\\n\");\n  \n});","window.TAPAS_ENV =\n  name: 'development'\n"]}